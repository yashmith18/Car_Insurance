{"ast":null,"code":"const directoryContent = (cid, node, unixfs, path, resolve, depth, blockstore) => {\n  function yieldDirectoryContent() {\n    try {\n      let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return async function* () {\n        const offset = options.offset || 0;\n        const length = options.length || node.Links.length;\n        const links = node.Links.slice(offset, length);\n        for (const link of links) {\n          const result = await resolve(link.Hash, link.Name || '', `${path}/${link.Name || ''}`, [], depth + 1, blockstore, options);\n          if (result.entry) {\n            yield result.entry;\n          }\n        }\n      }();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }\n  return yieldDirectoryContent;\n};\nexport default directoryContent;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}