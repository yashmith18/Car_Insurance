{"ast":null,"code":"const removeOldestQuery = _ref => {\n  let {\n    persistedClient\n  } = _ref;\n  const mutations = [...persistedClient.clientState.mutations];\n  const queries = [...persistedClient.clientState.queries];\n  const client = {\n    ...persistedClient,\n    clientState: {\n      mutations,\n      queries\n    }\n  }; // sort queries by dataUpdatedAt (oldest first)\n\n  const sortedQueries = [...queries].sort((a, b) => a.state.dataUpdatedAt - b.state.dataUpdatedAt); // clean oldest query\n\n  if (sortedQueries.length > 0) {\n    const oldestData = sortedQueries.shift();\n    client.clientState.queries = queries.filter(q => q !== oldestData);\n    return client;\n  }\n  return undefined;\n};\nexport { removeOldestQuery };\n//# sourceMappingURL=retryStrategies.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}