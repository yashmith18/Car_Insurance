{"ast":null,"code":"import { CID } from 'multiformats';\nimport { BaseBlockstore } from 'blockstore-core';\nexport class MemoryBlockStore extends BaseBlockstore {\n  constructor() {\n    super();\n    this.store = new Map();\n  }\n  async *blocks() {\n    for (const [cidStr, bytes] of this.store.entries()) {\n      yield {\n        cid: CID.parse(cidStr),\n        bytes\n      };\n    }\n  }\n  put(cid, bytes) {\n    this.store.set(cid.toString(), bytes);\n    return Promise.resolve();\n  }\n  get(cid) {\n    const bytes = this.store.get(cid.toString());\n    if (!bytes) {\n      throw new Error(`block with cid ${cid.toString()} no found`);\n    }\n    return Promise.resolve(bytes);\n  }\n  has(cid) {\n    return Promise.resolve(this.store.has(cid.toString()));\n  }\n  close() {\n    this.store.clear();\n    return Promise.resolve();\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}