{"ast":null,"code":"const BaseFilter = require('./base-filter');\nconst getBlocksForRange = require('./getBlocksForRange');\nconst {\n  incrementHexInt\n} = require('./hexUtils');\nclass BlockFilter extends BaseFilter {\n  constructor(_ref) {\n    let {\n      provider,\n      params\n    } = _ref;\n    super();\n    this.type = 'block';\n    this.provider = provider;\n  }\n  async update(_ref2) {\n    let {\n      oldBlock,\n      newBlock\n    } = _ref2;\n    const toBlock = newBlock;\n    const fromBlock = incrementHexInt(oldBlock);\n    const blockBodies = await getBlocksForRange({\n      provider: this.provider,\n      fromBlock,\n      toBlock\n    });\n    const blockHashes = blockBodies.map(block => block.hash);\n    this.addResults(blockHashes);\n  }\n}\nmodule.exports = BlockFilter;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}